/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.rebekkaxi.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ProductInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1977142440278516248L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProductInfo\",\"namespace\":\"com.rebekkaxi.avro\",\"fields\":[{\"name\":\"PogId\",\"type\":\"int\"},{\"name\":\"Supc\",\"type\":[\"int\",\"null\"]},{\"name\":\"Brand\",\"type\":[\"string\",\"null\"]},{\"name\":\"Description\",\"type\":[\"string\",\"null\"]},{\"name\":\"Size\",\"type\":[\"string\",\"null\"]},{\"name\":\"Category\",\"type\":[\"string\",\"null\"]},{\"name\":\"SubCategory\",\"type\":[\"string\",\"null\"]},{\"name\":\"Price\",\"type\":\"int\"},{\"name\":\"Quantity\",\"type\":\"int\"},{\"name\":\"Country\",\"type\":[\"string\",\"null\"]},{\"name\":\"SellerCode\",\"type\":[\"int\",\"null\"]},{\"name\":\"CreationTime\",\"type\":[\"string\",\"null\"]},{\"name\":\"Stock\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ProductInfo> ENCODER =
      new BinaryMessageEncoder<ProductInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProductInfo> DECODER =
      new BinaryMessageDecoder<ProductInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ProductInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ProductInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ProductInfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ProductInfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ProductInfo from a ByteBuffer. */
  public static ProductInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int PogId;
  @Deprecated public java.lang.Integer Supc;
  @Deprecated public java.lang.CharSequence Brand;
  @Deprecated public java.lang.CharSequence Description;
  @Deprecated public java.lang.CharSequence Size;
  @Deprecated public java.lang.CharSequence Category;
  @Deprecated public java.lang.CharSequence SubCategory;
  @Deprecated public int Price;
  @Deprecated public int Quantity;
  @Deprecated public java.lang.CharSequence Country;
  @Deprecated public java.lang.Integer SellerCode;
  @Deprecated public java.lang.CharSequence CreationTime;
  @Deprecated public java.lang.CharSequence Stock;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProductInfo() {}

  /**
   * All-args constructor.
   * @param PogId The new value for PogId
   * @param Supc The new value for Supc
   * @param Brand The new value for Brand
   * @param Description The new value for Description
   * @param Size The new value for Size
   * @param Category The new value for Category
   * @param SubCategory The new value for SubCategory
   * @param Price The new value for Price
   * @param Quantity The new value for Quantity
   * @param Country The new value for Country
   * @param SellerCode The new value for SellerCode
   * @param CreationTime The new value for CreationTime
   * @param Stock The new value for Stock
   */
  public ProductInfo(java.lang.Integer PogId, java.lang.Integer Supc, java.lang.CharSequence Brand, java.lang.CharSequence Description, java.lang.CharSequence Size, java.lang.CharSequence Category, java.lang.CharSequence SubCategory, java.lang.Integer Price, java.lang.Integer Quantity, java.lang.CharSequence Country, java.lang.Integer SellerCode, java.lang.CharSequence CreationTime, java.lang.CharSequence Stock) {
    this.PogId = PogId;
    this.Supc = Supc;
    this.Brand = Brand;
    this.Description = Description;
    this.Size = Size;
    this.Category = Category;
    this.SubCategory = SubCategory;
    this.Price = Price;
    this.Quantity = Quantity;
    this.Country = Country;
    this.SellerCode = SellerCode;
    this.CreationTime = CreationTime;
    this.Stock = Stock;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return PogId;
    case 1: return Supc;
    case 2: return Brand;
    case 3: return Description;
    case 4: return Size;
    case 5: return Category;
    case 6: return SubCategory;
    case 7: return Price;
    case 8: return Quantity;
    case 9: return Country;
    case 10: return SellerCode;
    case 11: return CreationTime;
    case 12: return Stock;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: PogId = (java.lang.Integer)value$; break;
    case 1: Supc = (java.lang.Integer)value$; break;
    case 2: Brand = (java.lang.CharSequence)value$; break;
    case 3: Description = (java.lang.CharSequence)value$; break;
    case 4: Size = (java.lang.CharSequence)value$; break;
    case 5: Category = (java.lang.CharSequence)value$; break;
    case 6: SubCategory = (java.lang.CharSequence)value$; break;
    case 7: Price = (java.lang.Integer)value$; break;
    case 8: Quantity = (java.lang.Integer)value$; break;
    case 9: Country = (java.lang.CharSequence)value$; break;
    case 10: SellerCode = (java.lang.Integer)value$; break;
    case 11: CreationTime = (java.lang.CharSequence)value$; break;
    case 12: Stock = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'PogId' field.
   * @return The value of the 'PogId' field.
   */
  public java.lang.Integer getPogId() {
    return PogId;
  }

  /**
   * Sets the value of the 'PogId' field.
   * @param value the value to set.
   */
  public void setPogId(java.lang.Integer value) {
    this.PogId = value;
  }

  /**
   * Gets the value of the 'Supc' field.
   * @return The value of the 'Supc' field.
   */
  public java.lang.Integer getSupc() {
    return Supc;
  }

  /**
   * Sets the value of the 'Supc' field.
   * @param value the value to set.
   */
  public void setSupc(java.lang.Integer value) {
    this.Supc = value;
  }

  /**
   * Gets the value of the 'Brand' field.
   * @return The value of the 'Brand' field.
   */
  public java.lang.CharSequence getBrand() {
    return Brand;
  }

  /**
   * Sets the value of the 'Brand' field.
   * @param value the value to set.
   */
  public void setBrand(java.lang.CharSequence value) {
    this.Brand = value;
  }

  /**
   * Gets the value of the 'Description' field.
   * @return The value of the 'Description' field.
   */
  public java.lang.CharSequence getDescription() {
    return Description;
  }

  /**
   * Sets the value of the 'Description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.Description = value;
  }

  /**
   * Gets the value of the 'Size' field.
   * @return The value of the 'Size' field.
   */
  public java.lang.CharSequence getSize() {
    return Size;
  }

  /**
   * Sets the value of the 'Size' field.
   * @param value the value to set.
   */
  public void setSize(java.lang.CharSequence value) {
    this.Size = value;
  }

  /**
   * Gets the value of the 'Category' field.
   * @return The value of the 'Category' field.
   */
  public java.lang.CharSequence getCategory() {
    return Category;
  }

  /**
   * Sets the value of the 'Category' field.
   * @param value the value to set.
   */
  public void setCategory(java.lang.CharSequence value) {
    this.Category = value;
  }

  /**
   * Gets the value of the 'SubCategory' field.
   * @return The value of the 'SubCategory' field.
   */
  public java.lang.CharSequence getSubCategory() {
    return SubCategory;
  }

  /**
   * Sets the value of the 'SubCategory' field.
   * @param value the value to set.
   */
  public void setSubCategory(java.lang.CharSequence value) {
    this.SubCategory = value;
  }

  /**
   * Gets the value of the 'Price' field.
   * @return The value of the 'Price' field.
   */
  public java.lang.Integer getPrice() {
    return Price;
  }

  /**
   * Sets the value of the 'Price' field.
   * @param value the value to set.
   */
  public void setPrice(java.lang.Integer value) {
    this.Price = value;
  }

  /**
   * Gets the value of the 'Quantity' field.
   * @return The value of the 'Quantity' field.
   */
  public java.lang.Integer getQuantity() {
    return Quantity;
  }

  /**
   * Sets the value of the 'Quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.Integer value) {
    this.Quantity = value;
  }

  /**
   * Gets the value of the 'Country' field.
   * @return The value of the 'Country' field.
   */
  public java.lang.CharSequence getCountry() {
    return Country;
  }

  /**
   * Sets the value of the 'Country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.Country = value;
  }

  /**
   * Gets the value of the 'SellerCode' field.
   * @return The value of the 'SellerCode' field.
   */
  public java.lang.Integer getSellerCode() {
    return SellerCode;
  }

  /**
   * Sets the value of the 'SellerCode' field.
   * @param value the value to set.
   */
  public void setSellerCode(java.lang.Integer value) {
    this.SellerCode = value;
  }

  /**
   * Gets the value of the 'CreationTime' field.
   * @return The value of the 'CreationTime' field.
   */
  public java.lang.CharSequence getCreationTime() {
    return CreationTime;
  }

  /**
   * Sets the value of the 'CreationTime' field.
   * @param value the value to set.
   */
  public void setCreationTime(java.lang.CharSequence value) {
    this.CreationTime = value;
  }

  /**
   * Gets the value of the 'Stock' field.
   * @return The value of the 'Stock' field.
   */
  public java.lang.CharSequence getStock() {
    return Stock;
  }

  /**
   * Sets the value of the 'Stock' field.
   * @param value the value to set.
   */
  public void setStock(java.lang.CharSequence value) {
    this.Stock = value;
  }

  /**
   * Creates a new ProductInfo RecordBuilder.
   * @return A new ProductInfo RecordBuilder
   */
  public static com.rebekkaxi.avro.ProductInfo.Builder newBuilder() {
    return new com.rebekkaxi.avro.ProductInfo.Builder();
  }

  /**
   * Creates a new ProductInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProductInfo RecordBuilder
   */
  public static com.rebekkaxi.avro.ProductInfo.Builder newBuilder(com.rebekkaxi.avro.ProductInfo.Builder other) {
    return new com.rebekkaxi.avro.ProductInfo.Builder(other);
  }

  /**
   * Creates a new ProductInfo RecordBuilder by copying an existing ProductInfo instance.
   * @param other The existing instance to copy.
   * @return A new ProductInfo RecordBuilder
   */
  public static com.rebekkaxi.avro.ProductInfo.Builder newBuilder(com.rebekkaxi.avro.ProductInfo other) {
    return new com.rebekkaxi.avro.ProductInfo.Builder(other);
  }

  /**
   * RecordBuilder for ProductInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProductInfo>
    implements org.apache.avro.data.RecordBuilder<ProductInfo> {

    private int PogId;
    private java.lang.Integer Supc;
    private java.lang.CharSequence Brand;
    private java.lang.CharSequence Description;
    private java.lang.CharSequence Size;
    private java.lang.CharSequence Category;
    private java.lang.CharSequence SubCategory;
    private int Price;
    private int Quantity;
    private java.lang.CharSequence Country;
    private java.lang.Integer SellerCode;
    private java.lang.CharSequence CreationTime;
    private java.lang.CharSequence Stock;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.rebekkaxi.avro.ProductInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.PogId)) {
        this.PogId = data().deepCopy(fields()[0].schema(), other.PogId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Supc)) {
        this.Supc = data().deepCopy(fields()[1].schema(), other.Supc);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Brand)) {
        this.Brand = data().deepCopy(fields()[2].schema(), other.Brand);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Description)) {
        this.Description = data().deepCopy(fields()[3].schema(), other.Description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Size)) {
        this.Size = data().deepCopy(fields()[4].schema(), other.Size);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Category)) {
        this.Category = data().deepCopy(fields()[5].schema(), other.Category);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.SubCategory)) {
        this.SubCategory = data().deepCopy(fields()[6].schema(), other.SubCategory);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Price)) {
        this.Price = data().deepCopy(fields()[7].schema(), other.Price);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Quantity)) {
        this.Quantity = data().deepCopy(fields()[8].schema(), other.Quantity);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.Country)) {
        this.Country = data().deepCopy(fields()[9].schema(), other.Country);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.SellerCode)) {
        this.SellerCode = data().deepCopy(fields()[10].schema(), other.SellerCode);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.CreationTime)) {
        this.CreationTime = data().deepCopy(fields()[11].schema(), other.CreationTime);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.Stock)) {
        this.Stock = data().deepCopy(fields()[12].schema(), other.Stock);
        fieldSetFlags()[12] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ProductInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(com.rebekkaxi.avro.ProductInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.PogId)) {
        this.PogId = data().deepCopy(fields()[0].schema(), other.PogId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Supc)) {
        this.Supc = data().deepCopy(fields()[1].schema(), other.Supc);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Brand)) {
        this.Brand = data().deepCopy(fields()[2].schema(), other.Brand);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Description)) {
        this.Description = data().deepCopy(fields()[3].schema(), other.Description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Size)) {
        this.Size = data().deepCopy(fields()[4].schema(), other.Size);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Category)) {
        this.Category = data().deepCopy(fields()[5].schema(), other.Category);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.SubCategory)) {
        this.SubCategory = data().deepCopy(fields()[6].schema(), other.SubCategory);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Price)) {
        this.Price = data().deepCopy(fields()[7].schema(), other.Price);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Quantity)) {
        this.Quantity = data().deepCopy(fields()[8].schema(), other.Quantity);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.Country)) {
        this.Country = data().deepCopy(fields()[9].schema(), other.Country);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.SellerCode)) {
        this.SellerCode = data().deepCopy(fields()[10].schema(), other.SellerCode);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.CreationTime)) {
        this.CreationTime = data().deepCopy(fields()[11].schema(), other.CreationTime);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.Stock)) {
        this.Stock = data().deepCopy(fields()[12].schema(), other.Stock);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'PogId' field.
      * @return The value.
      */
    public java.lang.Integer getPogId() {
      return PogId;
    }

    /**
      * Sets the value of the 'PogId' field.
      * @param value The value of 'PogId'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setPogId(int value) {
      validate(fields()[0], value);
      this.PogId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'PogId' field has been set.
      * @return True if the 'PogId' field has been set, false otherwise.
      */
    public boolean hasPogId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'PogId' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearPogId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Supc' field.
      * @return The value.
      */
    public java.lang.Integer getSupc() {
      return Supc;
    }

    /**
      * Sets the value of the 'Supc' field.
      * @param value The value of 'Supc'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setSupc(java.lang.Integer value) {
      validate(fields()[1], value);
      this.Supc = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Supc' field has been set.
      * @return True if the 'Supc' field has been set, false otherwise.
      */
    public boolean hasSupc() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Supc' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearSupc() {
      Supc = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Brand' field.
      * @return The value.
      */
    public java.lang.CharSequence getBrand() {
      return Brand;
    }

    /**
      * Sets the value of the 'Brand' field.
      * @param value The value of 'Brand'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setBrand(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.Brand = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Brand' field has been set.
      * @return True if the 'Brand' field has been set, false otherwise.
      */
    public boolean hasBrand() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'Brand' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearBrand() {
      Brand = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'Description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return Description;
    }

    /**
      * Sets the value of the 'Description' field.
      * @param value The value of 'Description'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.Description = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'Description' field has been set.
      * @return True if the 'Description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'Description' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearDescription() {
      Description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'Size' field.
      * @return The value.
      */
    public java.lang.CharSequence getSize() {
      return Size;
    }

    /**
      * Sets the value of the 'Size' field.
      * @param value The value of 'Size'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setSize(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.Size = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'Size' field has been set.
      * @return True if the 'Size' field has been set, false otherwise.
      */
    public boolean hasSize() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'Size' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearSize() {
      Size = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'Category' field.
      * @return The value.
      */
    public java.lang.CharSequence getCategory() {
      return Category;
    }

    /**
      * Sets the value of the 'Category' field.
      * @param value The value of 'Category'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setCategory(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.Category = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'Category' field has been set.
      * @return True if the 'Category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'Category' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearCategory() {
      Category = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'SubCategory' field.
      * @return The value.
      */
    public java.lang.CharSequence getSubCategory() {
      return SubCategory;
    }

    /**
      * Sets the value of the 'SubCategory' field.
      * @param value The value of 'SubCategory'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setSubCategory(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.SubCategory = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'SubCategory' field has been set.
      * @return True if the 'SubCategory' field has been set, false otherwise.
      */
    public boolean hasSubCategory() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'SubCategory' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearSubCategory() {
      SubCategory = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'Price' field.
      * @return The value.
      */
    public java.lang.Integer getPrice() {
      return Price;
    }

    /**
      * Sets the value of the 'Price' field.
      * @param value The value of 'Price'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setPrice(int value) {
      validate(fields()[7], value);
      this.Price = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'Price' field has been set.
      * @return True if the 'Price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'Price' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearPrice() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'Quantity' field.
      * @return The value.
      */
    public java.lang.Integer getQuantity() {
      return Quantity;
    }

    /**
      * Sets the value of the 'Quantity' field.
      * @param value The value of 'Quantity'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setQuantity(int value) {
      validate(fields()[8], value);
      this.Quantity = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'Quantity' field has been set.
      * @return True if the 'Quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'Quantity' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearQuantity() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'Country' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountry() {
      return Country;
    }

    /**
      * Sets the value of the 'Country' field.
      * @param value The value of 'Country'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.Country = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'Country' field has been set.
      * @return True if the 'Country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'Country' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearCountry() {
      Country = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'SellerCode' field.
      * @return The value.
      */
    public java.lang.Integer getSellerCode() {
      return SellerCode;
    }

    /**
      * Sets the value of the 'SellerCode' field.
      * @param value The value of 'SellerCode'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setSellerCode(java.lang.Integer value) {
      validate(fields()[10], value);
      this.SellerCode = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'SellerCode' field has been set.
      * @return True if the 'SellerCode' field has been set, false otherwise.
      */
    public boolean hasSellerCode() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'SellerCode' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearSellerCode() {
      SellerCode = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'CreationTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreationTime() {
      return CreationTime;
    }

    /**
      * Sets the value of the 'CreationTime' field.
      * @param value The value of 'CreationTime'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setCreationTime(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.CreationTime = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'CreationTime' field has been set.
      * @return True if the 'CreationTime' field has been set, false otherwise.
      */
    public boolean hasCreationTime() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'CreationTime' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearCreationTime() {
      CreationTime = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'Stock' field.
      * @return The value.
      */
    public java.lang.CharSequence getStock() {
      return Stock;
    }

    /**
      * Sets the value of the 'Stock' field.
      * @param value The value of 'Stock'.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder setStock(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.Stock = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'Stock' field has been set.
      * @return True if the 'Stock' field has been set, false otherwise.
      */
    public boolean hasStock() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'Stock' field.
      * @return This builder.
      */
    public com.rebekkaxi.avro.ProductInfo.Builder clearStock() {
      Stock = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProductInfo build() {
      try {
        ProductInfo record = new ProductInfo();
        record.PogId = fieldSetFlags()[0] ? this.PogId : (java.lang.Integer) defaultValue(fields()[0]);
        record.Supc = fieldSetFlags()[1] ? this.Supc : (java.lang.Integer) defaultValue(fields()[1]);
        record.Brand = fieldSetFlags()[2] ? this.Brand : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.Description = fieldSetFlags()[3] ? this.Description : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.Size = fieldSetFlags()[4] ? this.Size : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.Category = fieldSetFlags()[5] ? this.Category : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.SubCategory = fieldSetFlags()[6] ? this.SubCategory : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.Price = fieldSetFlags()[7] ? this.Price : (java.lang.Integer) defaultValue(fields()[7]);
        record.Quantity = fieldSetFlags()[8] ? this.Quantity : (java.lang.Integer) defaultValue(fields()[8]);
        record.Country = fieldSetFlags()[9] ? this.Country : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.SellerCode = fieldSetFlags()[10] ? this.SellerCode : (java.lang.Integer) defaultValue(fields()[10]);
        record.CreationTime = fieldSetFlags()[11] ? this.CreationTime : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.Stock = fieldSetFlags()[12] ? this.Stock : (java.lang.CharSequence) defaultValue(fields()[12]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProductInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProductInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProductInfo>
    READER$ = (org.apache.avro.io.DatumReader<ProductInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
